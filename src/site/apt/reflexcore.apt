                                    ------
                                    Reflex Core Module
                                    ------
                                    S.Takezaki
                                    ------
                                    2009/5/30


Reflex Core Moduleの概要

*  Reflex Core Module

	POJOからXMLやJSONにシリアライズ、逆にPOJOからXMLやJSONにデシリアライズできます。
	ReflexはオリジナルのXStream（http://xstream.codehaus.org/）を拡張し、属性やテキストノード、名前空間の指定などができるようにしています。
	(xstreamのライブラリ、xstream-1.1.2.jar、およびプルパーサ xpp3-min1.1.3.4.RC8.jarに、当ライブラリを追加することで使用できるようになります)
	
**  記述ルール

    (以降、クラス、プロパティのことをJavaのクラス、fieldとします。また、要素名、属性、名前空間、QNAME、テキストノードはXMLのこととします。）

	* クラス名、プロパティ名がxmlのタグ(要素名)に対応します。プロパティの先頭は大文字（Uppercase)になり、xml/jsonの要素名の先頭はデフォルトでは小文字（Lowercase)となります。
	
	* シリアライズ（デシリアライズ）対象となるプロパティはpublicでなければなりません。privateのものやgetter/setterなどのmethodは無視されます。また、public fieldでもfinal修飾子が付くものは無視されます。

	* Java5のGenericsをすることで、parent.child.･･.bar　のように連結表記で記述できます。

	* 型には、intなどのプリミティブ型の他、String、Dateなどを指定できます。Date型の場合は、ISO8601のタイムゾーン付きフォーマットになります。

    * 同じクラス名であってもパッケージ名が異なれば違う要素として扱います。例えば、List<foo.Sample>とList<bar.Sample>は区別されます。(v1.0)
    
    * com.google.appengine.api.datastore.Text型をサポートしています。500文字以上になる場合はStringの代わりにText型を使用してください。(v1.0)
    
    * JSONの配列(二次元）に変換する場合はプロパティfinal int _$$colの値に配列の要素数を設定します。また要素名は定義せず、テキストノード（_$$text）を使用してください。(詳しくは、JSONArrayTest)

**  XML名前空間の指定

    * 名前空間をJavaのパッケージ名に関連づけします。名前空間とパッケージ名をペアとするパラメータを指定することで複数個の名前空間を指定できます。

    * _$$nsプロパティをつけることで、クラス名に名前空間宣言を付けることができます。JSONでは単に$$nsプロパティになります。
	
    * _$で始まるプロパティを先頭行から書くことでクラス名に属性を付けることができます。これは名前空間宣言を示す_$$nsプロパティの次の行でかつ要素名を示すプロパティの前の行に書く必要があります。JSONでは単なるプロパティになります。

**  属性の指定

    * プロパティ名に_$を付けることで属性となります。例えば、entry_$titleとすると、要素entryにtitleという属性が追加されます。JSONでは単なるプロパティになります。

    * プロパティ名では要素名QNAMEの':'の代わりに'$'に置き換えたものになります。例えば、要素名のxmlns:atomはプロパティ名ではxmlns$atomとなります。JSONも同様に$に置き換えたものになります。

**  テキストノード

    * プロパティ名を_$$textとすることでテキストノードになります。_$$textはどのプロパティより後ろの行になければなりません。JSONでは単なる$textプロパティになります。

**  特殊文字の変換

    * プロパティの先頭の_(アンダースコア)は無視されます

    * 要素名にハイフン(-)が含まれる場合はクラス、プロパティではアンダースコア２つ(__)に変換されます。CaseSensitiveです。
	
     